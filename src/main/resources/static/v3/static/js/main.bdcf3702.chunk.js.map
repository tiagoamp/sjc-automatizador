{"version":3,"sources":["component/Header.js","component/Footer.js","component/FlowMenu.js","component/steps/ConvertedTable.js","component/steps/Converter.js","component/steps/ProcessedTable.js","component/steps/Processor.js","component/steps/Output.js","service/HttpGateway.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Footer","FlowMenu","step","this","props","aria-hidden","ConvertedTable","_this$props","convertedFiles","nextStep","map","convFile","index","key","originalFileName","convertedFileName","operacionalRowsCount","administrativoRowsCount","onClick","Converter","uploadedFiles","handleInputFilesUpload","resetFiles","convertInputFiles","es","onDrop","acceptedFiles","_ref","getRootProps","getInputProps","Object","assign","accept","length","f","name","ConvertedTable_ConvertedTable","ProcessedTable","arr","typeParam","filter","el","messages","msg","type","processedFiles","downloadMessagesFile","prevStep","getMsgsFrom","file","fileName","text","Processor","getTotalInputFiles","uploadedAfastFile","totalInputFiles","handleAfastamentosFilesUpload","processInputFiles","deleteAfastamentosFile","ProcessedTable_ProcessedTable","Output","downloadOutputFile","URL_BASE","window","location","hostname","URL_UPLOAD_INPUT_FILE","URL_DELETE_AFAST","URL_CONVERT_INPUT_FILES","URL_CONVERT_TOTAL_INPUT_FILES","URL_PROCESS_INPUT_FILES","URL_DOWNLOAD_MSGS_FILE","URL_DOWNLOAD_OUTPUT_FILE","httpGatewayFunctions","uploadFileRequest","data","formData","FormData","append","fetch","method","body","cleanDirsRequest","deleteAfastamentoRequest","totalConvertInputFiles","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getComponentForStep","_this$state","state","Converter_Converter","Processor_Processor","Output_Output","currStep","setState","files","validFiles","toLowerCase","endsWith","invalidFiles","currFiles","toConsumableArray","existingFiles","c","includes","newFiles","filesNames","toast","TYPE","ERROR","autoClose","closeButton","promises","Promise","all","then","res","updatedFiles","concat","SUCCESS","catch","err","filename","isAfastamento","json","message","blob","url","URL","createObjectURL","document","href","download","click","Header_Header","FlowMenu_FlowMenu","react_toastify","Footer_Footer","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iYAGqBA,0LAGjB,OACEC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,qBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAhB,wBAN0BC,cCAfC,0LAGjB,OACEL,EAAAC,EAAAC,cAAA,0EAJ8BE,cCAfE,0LAGjB,IAAMC,EAAOC,KAAKC,MAAMF,KAExB,OAEEP,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,OAAKC,UAAoB,IAATI,EAAa,MAAQ,gBACnCP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBO,cAAY,SAC/CV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,oBAEJH,EAAAC,EAAAC,cAAA,uFAGFF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAAiCO,cAAY,SAE1DV,EAAAC,EAAAC,cAAA,OAAKC,UAAoB,IAATI,EAAa,MAAQ,gBACnCP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBO,cAAY,SAC5CV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,oBAEJH,EAAAC,EAAAC,cAAA,+GAGFF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAAiCO,cAAY,SAE1DV,EAAAC,EAAAC,cAAA,OAAKC,UAAoB,IAATI,EAAa,MAAQ,gBACnCP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBO,cAAY,SAC7CV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,+BAEJH,EAAAC,EAAAC,cAAA,wFAlC0BE,sBCAjBO,0LAEV,IAAAC,EAC8BJ,KAAKC,MAAlCI,EADDD,EACCC,eAAgBC,EADjBF,EACiBE,SAExB,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACTH,EAAAC,EAAAC,cAAA,uCAEAF,EAAAC,EAAAC,cAAA,oCAEAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,iCAGJF,EAAAC,EAAAC,cAAA,aAGIW,EAAeE,IAAK,SAACC,EAAUC,GAC3B,OACAjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,GACLjB,EAAAC,EAAAC,cAAA,UAAKc,EAASG,kBACdnB,EAAAC,EAAAC,cAAA,UAAKc,EAASI,kBAAd,IAAiCpB,EAAAC,EAAAC,cAAA,iBAASc,EAASK,qBAAlB,eAAoDL,EAASM,wBAA7D,qBASjDtB,EAAAC,EAAAC,cAAA,UAAQqB,QAAST,GAAjB,aAAkCd,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAAiCO,cAAY,kBAlC5DN,cCEvBoB,0LAEV,IAAAZ,EACoGJ,KAAKC,MAAxGgB,EADDb,EACCa,cAAeZ,EADhBD,EACgBC,eAAgBa,EADhCd,EACgCc,uBAAwBC,EADxDf,EACwDe,WAAYC,EADpEhB,EACoEgB,kBAAmBd,EADvFF,EACuFE,SAE9F,OACAd,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEbH,EAAAC,EAAAC,cAAA,wCAEAF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUC,OAAQ,SAAAC,GAAa,OAAIL,EAAuBK,KACvD,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,aAAcC,EAAhBF,EAAgBE,cAAhB,OACClC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,MAAAiC,OAAAC,OAAA,GAASH,IAAT,CAAyB9B,UAAU,iBACjCH,EAAAC,EAAAC,cAAA,QAAAiC,OAAAC,OAAA,GAAWF,IAAX,CAA4BG,OAAO,UACnCrC,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,gCACNF,EAAAC,EAAAC,cAAA,8FACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,0BAAkDsB,EAAca,OAAhE,KACEtC,EAAAC,EAAAC,cAAA,YAAQuB,EAAca,OAAS,EAAIb,EAAcV,IAAK,SAAAwB,GAAC,MAAI,KAAOA,EAAEC,KAAO,MAAO,iBAM5FxC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQqB,QAASI,GAAY3B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBO,cAAY,SAA5E,UACAV,EAAAC,EAAAC,cAAA,UAAQqB,QAASK,GAAmB5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBO,cAAY,SAAtF,eAMFG,EAAeyB,OAAS,EAAKtC,EAAAC,EAAAC,cAACuC,EAAD,CAAgB5B,eAAgBA,EAAgBC,SAAUA,IAAgB,aAjCxEV,cCFlBsC,6LAEPC,EAAKC,GACf,OAAOD,EAAIE,OAAO,SAAAC,GACd,OAAOA,EAAGC,SAASF,OAAO,SAAAG,GAAG,OAAIA,EAAIC,OAASL,IAAWN,OAAS,qCAK/D,IAAA1B,EAC8DJ,KAAKC,MAAlEyC,EADDtC,EACCsC,eAAgBC,EADjBvC,EACiBuC,qBAAsBC,EADvCxC,EACuCwC,SAAUtC,EADjDF,EACiDE,SAExD,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACTH,EAAAC,EAAAC,cAAA,wCAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,iCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAE6C,IAApDK,KAAK6C,YAAYH,EAAgB,QAAQZ,OAAetC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,6BACxDK,KAAK6C,YAAYH,EAAgB,QAAQnC,IAAK,SAAAuC,GAC1C,OACItD,EAAAC,EAAAC,cAAA,OAAKgB,IAAMoC,EAAKC,UACZvD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAkCmD,EAAKC,UACvCvD,EAAAC,EAAAC,cAAA,UACMoD,EAAKP,SAAShC,IAAK,SAAC+B,EAAI7B,GAAL,OAAejB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,GAAT,IAAkB6B,EAAGU,KAArB,aAShExD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAE8C,IAArDK,KAAK6C,YAAYH,EAAgB,SAASZ,OAAetC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,6BACzDK,KAAK6C,YAAYH,EAAgB,SAASnC,IAAK,SAAAuC,GAC3C,OACItD,EAAAC,EAAAC,cAAA,OAAKgB,IAAMoC,EAAKC,UACZvD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAkCmD,EAAKC,UACvCvD,EAAAC,EAAAC,cAAA,UACMoD,EAAKP,SAAShC,IAAK,SAAC+B,EAAI7B,GAAL,OAAejB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,GAAT,IAAkB6B,EAAGU,KAArB,aAShExD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,uBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAE8C,IAArDK,KAAK6C,YAAYH,EAAgB,SAASZ,OAAetC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,6BACzDK,KAAK6C,YAAYH,EAAgB,SAASnC,IAAK,SAAAuC,GAC3C,OACItD,EAAAC,EAAAC,cAAA,OAAKgB,IAAMoC,EAAKC,UACZvD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAkCmD,EAAKC,UACvCvD,EAAAC,EAAAC,cAAA,UACMoD,EAAKP,SAAShC,IAAK,SAAC+B,EAAI7B,GAAL,OAAejB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,GAAT,IAAkB6B,EAAGU,KAArB,aAShExD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQqB,QAAS6B,GAAUpD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCAAgCO,cAAY,SAApF,UACAV,EAAAC,EAAAC,cAAA,UAAQqB,QAAS4B,GAAsBnD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAuBO,cAAY,SAAvF,YACAV,EAAAC,EAAAC,cAAA,UAAQqB,QAAST,GAAjB,aAAkCd,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAAiCO,cAAY,mBA5EhEN,cCEvBqD,8LAGjBjD,KAAKC,MAAMiD,sDAGJ,IAAA9C,EAEgEJ,KAAKC,MADpEkD,EADD/C,EACC+C,kBAAmBT,EADpBtC,EACoBsC,eAAgBU,EADpChD,EACoCgD,gBAAiBC,EADrDjD,EACqDiD,8BAA+BC,EADpFlD,EACoFkD,kBACzFC,EAFKnD,EAELmD,uBAAwBZ,EAFnBvC,EAEmBuC,qBAAsBC,EAFzCxC,EAEyCwC,SAAUtC,EAFnDF,EAEmDE,SAE1D,OACAd,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEbH,EAAAC,EAAAC,cAAA,wCAEAF,EAAAC,EAAAC,cAAA,yDAAkD0D,GAElD5D,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUC,OAAQ,SAAAC,GAAa,OAAI8B,EAA8B9B,EAAc,MAC5E,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,aAAcC,EAAhBF,EAAgBE,cAAhB,OACClC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,MAAAiC,OAAAC,OAAA,GAASH,IAAT,CAAyB9B,UAAU,iBACjCH,EAAAC,EAAAC,cAAA,QAAAiC,OAAAC,OAAA,GAAWF,IAAX,CAA4BG,OAAO,gBACnCrC,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,+BACNF,EAAAC,EAAAC,cAAA,2FACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,4BAAmDH,EAAAC,EAAAC,cAAA,YAA8B,OAAtByD,EAA6BA,EAAkBnB,KAAO,iBAMzHxC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQqB,QAAS6B,GAAUpD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCAAgCO,cAAY,SAApF,UACAV,EAAAC,EAAAC,cAAA,UAAQqB,QAASwC,GAAwB/D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBO,cAAY,SAAxF,WACAV,EAAAC,EAAAC,cAAA,UAAQqB,QAASuC,GAAmB9D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBO,cAAY,SAAhF,eAMFwC,EAAeZ,OAAS,EAAKtC,EAAAC,EAAAC,cAAC8D,EAAD,CAAgBd,eAAgBA,EAAgBC,qBAAsBA,EAAsBC,SAAUA,EAAUtC,SAAUA,IAAgB,aAxCxIV,aCFlB6D,8LAGjBzD,KAAKC,MAAMiD,sDAGJ,IAAA9C,EACqFJ,KAAKC,MAAzFmD,EADDhD,EACCgD,gBAAiBT,EADlBvC,EACkBuC,qBAAsBe,EADxCtD,EACwCsD,mBAAoBd,EAD5DxC,EAC4DwC,SAAUzB,EADtEf,EACsEe,WAE7E,OACA3B,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEbH,EAAAC,EAAAC,cAAA,kCAEAF,EAAAC,EAAAC,cAAA,yDAAkD0D,GAElD5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQqB,QAAS6B,GAAUpD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCAAgCO,cAAY,SAApF,UACAV,EAAAC,EAAAC,cAAA,UAAQqB,QAAS4B,GAAsBnD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAuBO,cAAY,SAAvF,aACAV,EAAAC,EAAAC,cAAA,UAAQqB,QAAS2C,GAAoBlE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAuBO,cAAY,SAArF,YACAV,EAAAC,EAAAC,cAAA,UAAQqB,QAASI,GAAY3B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBO,cAAY,SAA3E,uBArB0BN,oBCA9B+D,qBAAW,UAHAC,OAAOC,SAASC,SAGO,iBAElCC,EAAwBJ,EAAW,UACnCK,EAAmBL,EAAW,eAC9BM,EAA0BN,EAAW,UACrCO,EAAgCP,EAAW,gBAC3CQ,EAA0BR,EAAW,UACrCS,EAAyBT,EAAW,WACpCU,EAA2BV,EAAW,UA4C7BW,EAzCc,CAEzBC,kBAAmB,SAACC,GAChB,IAAIC,EAAY,IAAIC,SAEpB,OADAD,EAASE,OAAO,YAAaH,GACtBI,MAAMb,EAAuB,CAC5Bc,OAAQ,OACRC,KAAML,KAIlBM,iBAAkB,WACd,OAAOH,MAAMjB,EAAU,CAACkB,OAAQ,YAGpCG,yBAA0B,WACtB,OAAOJ,MAAMZ,EAAkB,CAACa,OAAQ,YAG5CzD,kBAAmB,WACf,OAAOwD,MAAMX,IAGjBgB,uBAAwB,WACpB,OAAOL,MAAMV,IAGjBZ,kBAAmB,WACf,OAAOsB,MAAMT,IAGjBxB,qBAAsB,WAClB,OAAOiC,MAAMR,IAGjBV,mBAAoB,WAChB,OAAOkB,MAAMP,KC4JNa,cA7Lb,SAAAA,IAAc,IAAAC,EAAA,OAAAxD,OAAAyD,EAAA,EAAAzD,CAAA3B,KAAAkF,IACZC,EAAAxD,OAAA0D,EAAA,EAAA1D,CAAA3B,KAAA2B,OAAA2D,EAAA,EAAA3D,CAAAuD,GAAAK,KAAAvF,QAIFwF,oBAAsB,WAAM,IAAAC,EAC0EN,EAAKO,MAAjG3F,EADkB0F,EAClB1F,KAAMkB,EADYwE,EACZxE,cAAekC,EADHsC,EACGtC,kBAAmB9C,EADtBoF,EACsBpF,eAAgBqC,EADtC+C,EACsC/C,eAAgBU,EADtDqC,EACsDrC,gBAEhF,OAAOrD,GACL,KAAK,EACH,OACEP,EAAAC,EAAAC,cAACiG,EAAD,CAAW1E,cAAeA,EAAeZ,eAAgBA,EAAgBa,uBAAwBiE,EAAKjE,uBAC3FC,WAAYgE,EAAKhE,WAAYC,kBAAmB+D,EAAK/D,kBAAmBd,SAAU6E,EAAK7E,WAEtG,KAAK,EACH,OACEd,EAAAC,EAAAC,cAACkG,EAAD,CAAWzC,kBAAmBA,EAAmBT,eAAgBA,EAAgBU,gBAAiBA,EAC1FC,8BAA+B8B,EAAK9B,8BAA+BC,kBAAmB6B,EAAK7B,kBAC3FC,uBAAwB4B,EAAK5B,uBAAwBZ,qBAAsBwC,EAAKxC,qBAAsBO,mBAAoBiC,EAAKjC,mBAC/HN,SAAUuC,EAAKvC,SAAUtC,SAAU6E,EAAK7E,WAEpD,KAAK,EACH,OACEd,EAAAC,EAAAC,cAACmG,EAAD,CAAQzC,gBAAiBA,EAAiBT,qBAAsBwC,EAAKxC,qBAAsBe,mBAAoByB,EAAKzB,mBAC5GR,mBAAoBiC,EAAKjC,mBAAoBN,SAAUuC,EAAKvC,SAAUzB,WAAYgE,EAAKhE,aAEnG,QACE,OACE3B,EAAAC,EAAAC,cAAA,gEA5BMyF,EAkCd7E,SAAW,WACT,IAAMwF,EAAWX,EAAKO,MAAM3F,KAC5BoF,EAAKY,SAAU,CAAEhG,KAAM+F,EAAS,KApCpBX,EAuCdvC,SAAW,WACT,IAAMkD,EAAWX,EAAKO,MAAM3F,KAC5BoF,EAAKY,SAAU,CAAEhG,KAAM+F,EAAS,EAAGpD,eAAgB,MAzCvCyC,EA4CdjE,uBAAyB,SAAC8E,GACxB,IAAMC,EAAaD,EAAM3D,OAAO,SAAAN,GAAC,OAAIA,EAAEC,KAAKkE,cAAcC,SAAS,UAC7DC,EAAeJ,EAAM3D,OAAO,SAAAN,GAAC,OAAKA,EAAEC,KAAKkE,cAAcC,SAAS,UAChEE,EAAS1E,OAAA2E,EAAA,EAAA3E,CAAOwD,EAAKO,MAAMzE,eAC3BsF,EAAgBN,EAAW5D,OAAO,SAAAN,GAAC,OAAIsE,EAAU9F,IAAI,SAAAiG,GAAC,OAAIA,EAAExE,OAAMyE,SAAS1E,EAAEC,QAC7E0E,EAAWT,EAAW5D,OAAO,SAAAN,GAAC,OAAKsE,EAAU9F,IAAI,SAAAiG,GAAC,OAAIA,EAAExE,OAAMyE,SAAS1E,EAAEC,QAE/E,GAAIoE,EAAatE,OAAS,EAAG,CAC3B,IAAM6E,EAAaP,EAAa7F,IAAI,SAAAwB,GAAC,MAAI,IAAMA,EAAEC,OACjD4E,YAAM,kEAA8DD,EAAY,CAAElE,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,IAE1I,GAAIT,EAAczE,OAAS,EAAG,CAC5B,IAAM6E,EAAaJ,EAAchG,IAAI,SAAAwB,GAAC,MAAI,IAAMA,EAAEC,OAClD4E,YAAM,4CAA2CD,EAAY,CAAElE,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,IAEvH,GAAwB,IAApBN,EAAS5E,OAAb,CAEA,IAAMmF,EAAWP,EAASnG,IAAI,SAAAwB,GAAC,OAAIuC,EAAqBC,kBAAkBxC,KAC1EmF,QAAQC,IAAIF,GACTG,KAAK,SAAAC,GACJ,IAAMC,EAAejB,EAAUkB,OAAOb,GACtCE,YAAM,uBAAwB,CAAEnE,KAAMmE,IAAMC,KAAKW,QAAST,WAAW,EAAMC,aAAa,IACxF7B,EAAKY,SAAU,CAAC9E,cAAeqG,EAAcjH,eAAgB,OAE9DoH,MAAM,SAAAC,GACLd,YAAM,oCAAsCc,EAAK,CAAEjF,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,QArEjG7B,EAyEd9B,8BAAgC,SAACP,GAC/B,IAAM6E,EAAW7E,EAAKd,KAAKkE,cACtByB,EAASxB,SAAS,UAAawB,EAASxB,SAAS,QAItD7B,EAAqBU,2BAClBoC,KAAK,SAAAC,GACJvE,EAAK8E,eAAgB,EACrBtD,EAAqBC,kBAAkBzB,KAExCsE,KAAK,SAAAC,GACAT,YAAM,qBAAsB,CAAEnE,KAAMmE,IAAMC,KAAKW,QAAST,WAAW,EAAMC,aAAa,IACtF7B,EAAKY,SAAU,CAAE5C,kBAAmBL,EAAMJ,eAAgB,OAE/D+E,MAAM,SAAAC,GAAG,OAAId,YAAM,oCAAsCc,EAAK,CAAEjF,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,MAZvHJ,YAAM,uCAAmC9D,EAAKd,KAAM,CAAES,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,KA5ElG7B,EA2FdhE,WAAa,WACXmD,EAAqBS,mBAClBqC,KAAK,SAAAC,GACJT,YAAM,iCAAkC,CAAEnE,KAAMmE,IAAMC,KAAKW,QAAST,WAAW,EAAMC,aAAa,IAClG7B,EAAKY,SAAU,CAAEhG,KAAM,EAAGqD,gBAAiB,EAAGnC,cAAe,GAAIZ,eAAgB,GAAI8C,kBAAmB,KAAMT,eAAgB,OAE/H+E,MAAM,SAAAC,GAAG,OAAId,YAAM,iCAAgCc,EAAK,CAAEjF,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,OAjGvG7B,EAoGd5B,uBAAyB,WACvBe,EAAqBU,2BAClBoC,KAAK,SAAAC,GACJT,YAAM,mCAAoC,CAAEnE,KAAMmE,IAAMC,KAAKW,QAAST,WAAW,EAAMC,aAAa,IACpG7B,EAAKY,SAAU,CAAErD,eAAgB,GAAIS,kBAAmB,SAEzDsE,MAAM,SAAAC,GAAG,OAAId,YAAM,iCAAgCc,EAAK,CAAEjF,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,OA1GvG7B,EA6Gd/D,kBAAoB,WACsB,IAApC+D,EAAKO,MAAMzE,cAAca,OAI7BwC,EAAqBlD,oBAClBgG,KAAK,SAAAC,GAAG,OAAIA,EAAIQ,SAChBT,KAAK,SAAAC,GAAG,OAAIlC,EAAKY,SAAU,CAAE1F,eAAgBgH,MAC7CI,MAAM,SAAAC,GAAG,OAAId,YAAM,+BAAiCc,EAAK,CAAEjF,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,MANlHJ,YAAM,+BAAgC,CAAEnE,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,KA/GpF7B,EAwHd7B,kBAAoB,WAClBgB,EAAqBhB,oBAClB8D,KAAK,SAAAC,GAAG,OAAIA,EAAIQ,SAChBT,KAAK,SAAAC,GAAG,OAAIlC,EAAKY,SAAU,CAAErD,eAAgB2E,MAC7CI,MAAM,SAAAC,GAAG,OAAId,YAAM,+BAAiCc,EAAK,CAAEjF,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,OA5HxG7B,EA+HdjC,mBAAqB,WACnBoB,EAAqBW,yBAClBmC,KAAK,SAAAC,GAAG,OAAIA,EAAIQ,SAChBT,KAAK,SAAAC,GAAG,OAAIlC,EAAKY,SAAU,CAAE3C,gBAAiBiE,MAC9CI,MAAM,SAAAC,GAAG,OAAId,YAAM,+BAAiCc,EAAII,QAAS,CAAErF,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,OAnIhH7B,EAsIdxC,qBAAuB,WACrB2B,EAAqB3B,uBAClByE,KAAK,SAAAC,GAAG,OAAIA,EAAIU,SAChBX,KAAK,SAAAW,GACF,IAAIC,EAAMpE,OAAOqE,IAAIC,gBAAgBH,GACjCtI,EAAI0I,SAASzI,cAAc,KAC/BD,EAAE2I,KAAOJ,EACTvI,EAAE4I,SAAW,gBACb5I,EAAE6I,UAELb,MAAM,SAAAC,GAAG,OAAId,YAAM,2BAA6Bc,EAAII,QAAS,CAAErF,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,OAhJ5G7B,EAmJdzB,mBAAqB,WACnBY,EAAqBZ,qBAClB0D,KAAK,SAAAC,GAAG,OAAIA,EAAIU,SAChBX,KAAK,SAAAW,GACF,IAAIC,EAAMpE,OAAOqE,IAAIC,gBAAgBH,GACjCtI,EAAI0I,SAASzI,cAAc,KAC/BD,EAAE2I,KAAOJ,EACTvI,EAAE4I,SAAW,YACb5I,EAAE6I,UAELb,MAAM,SAAAC,GAAG,OAAId,YAAM,2BAA6Bc,EAAII,QAAS,CAAErF,KAAMmE,IAAMC,KAAKC,MAAOC,WAAW,EAAMC,aAAa,OA3JxH7B,EAAKO,MAAQ,CAAE3F,KAAM,EAAGqD,gBAAiB,EAAGnC,cAAe,GAAIZ,eAAgB,GAAI8C,kBAAmB,KAAMT,eAAgB,IAFhHyC,wEAmKZ,OAEE3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAIbH,EAAAC,EAAAC,cAAC6I,EAAD,MAEA/I,EAAAC,EAAAC,cAAC8I,EAAD,CAAUzI,KAAMC,KAAK0F,MAAM3F,OAE3BP,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAgB1B,UAAW,MAE3BvH,EAAAC,EAAAC,cAAA,YAEIM,KAAKwF,uBAIThG,EAAAC,EAAAC,cAACgJ,EAAD,cAvLU9I,aCHE+I,QACW,cAA7B/E,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS8E,MACvB,2DCZNC,IAASC,OAAOtJ,EAAAC,EAAAC,cAACqJ,EAAD,MAASZ,SAASa,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/B,KAAK,SAAAgC,GACjCA,EAAaC","file":"static/js/main.bdcf3702.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Header.css';\n\nexport default class Header extends Component {\n\n  render() {\n    return (\n      <header>\n          <span className='brand'>SJC Automatizador</span>\n          <span className='by-tag'>by @tiagoamp</span>\n      </header>\n    )\n  }\n\n}\n","import React, { Component } from 'react'\nimport './Footer.css';\n\nexport default class Footer extends Component {\n\n  render() {\n    return (\n      <footer>\n        SJC-Automatizador | by @tiagoamp | v.3.0.0 | 2019\n      </footer>\n    )\n  }\n\n}\n","import React, { Component } from 'react'\nimport './FlowMenu.css';\n\nexport default class FlowMenu extends Component {\n  \n  render() {\n    const step = this.props.step;\n        \n    return (\n\n      <nav>\n        \n          <div className={step === 0 ? 'box' : 'box inactive'}>\n            <div>\n                <i className=\"fa fa-files-o fa-2x\" aria-hidden=\"true\"></i>                \n                <span className=\"phaseName\">Converter Dados</span>\n            </div>\n            <p>Extrai dados dos arquivos no formato 'pdf' e gera as planilhas de entrada</p>            \n          </div>\n\n          <i className=\"fa fa-angle-double-right fa-3x\" aria-hidden=\"true\"></i>\n\n          <div className={step === 1 ? 'box' : 'box inactive'}>\n            <div>\n                <i className=\"fa fa-cogs fa-2x\" aria-hidden=\"true\"></i>\n                <span className=\"phaseName\">Processar Dados</span>\n            </div>\n            <p>Processa dados das planilhas de entrada gerando relatório de processamento com erros e alertas</p>            \n          </div>\n\n          <i className=\"fa fa-angle-double-right fa-3x\" aria-hidden=\"true\"></i>\n\n          <div className={step === 2 ? 'box' : 'box inactive'}>\n            <div>\n                <i className=\"fa fa-table fa-2x\" aria-hidden=\"true\"></i>\n                <span className=\"phaseName\">Gerar planilha de saída</span>\n            </div>\n            <p>Gera planilha de saída a partir dos dados de entrada carregados</p>            \n          </div>\n\n      </nav>\n\n    )\n  }\n\n}\n","import React, { Component } from 'react'\nimport './ConvertedTable.css';\n\nexport default class ConvertedTable extends Component {\n\n  render() {\n    const { convertedFiles, nextStep } = this.props;\n    \n    return (\n      <div className=\"result-input\">\n            <h2>Resultado do Carregamento</h2>\n\n            <p>Diretório: \"Entrada\"</p>\n\n            <table className=\"table-entrada\">\n                <thead>\n                    <tr>\n                    <th>Arquivos de Entrada</th>\n                    <th>Planilhas Geradas</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {\n                    convertedFiles.map( (convFile, index) => {\n                        return (\n                        <tr key={index}>\n                            <td>{convFile.originalFileName}</td>\n                            <td>{convFile.convertedFileName} <small>({convFile.operacionalRowsCount} serv. op | {convFile.administrativoRowsCount} serv. adm)</small></td> \n                        </tr>\n                        )\n                    })\n                    }\n                    \n                </tbody>\n            </table>\n\n            <button onClick={nextStep}>AVANÇAR<i className=\"fa fa-angle-double-right fa-1x\" aria-hidden=\"true\"></i></button>\n        \n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport ConvertedTable from './ConvertedTable';\nimport './Steps.css';\n\nexport default class Converter extends Component {\n  \n  render() {\n    const { uploadedFiles, convertedFiles, handleInputFilesUpload, resetFiles, convertInputFiles, nextStep } = this.props;\n    \n    return (\n    <section>\n      <div className=\"entrada-body\">\n\n        <h2>Entrada para processamento</h2>\n        \n        <Dropzone onDrop={acceptedFiles => handleInputFilesUpload(acceptedFiles)}>\n          {({getRootProps, getInputProps}) => (\n            <section>\n              <div {...getRootProps()} className=\"dropzone-div\">\n                <input {...getInputProps()} accept=\".pdf\" />\n                <span><strong>Relatórios</strong></span>\n                <p>Arraste aqui os arquivos de relatórios em 'pdf' ou click para selecioná-los</p>\n                <div className=\"arquivos\">Arquivos feito upload [{uploadedFiles.length}]:  \n                  <span>{ uploadedFiles.length > 0 ? uploadedFiles.map( f => ' [' + f.name + ']') : ' nenhum ' }</span></div>\n              </div>\n            </section>\n          )}\n        </Dropzone>          \n        \n        <div>\n          <button onClick={resetFiles}><i className=\"fa fa-trash-o fa-1x\" aria-hidden=\"true\"></i>LIMPAR</button>\n          <button onClick={convertInputFiles}><i className=\"fa fa-file-pdf-o fa-1x\" aria-hidden=\"true\"></i>CONVERTER</button>\n        </div>\n     \n      </div>\n\n      {\n        convertedFiles.length > 0 ? (<ConvertedTable convertedFiles={convertedFiles} nextStep={nextStep} />) : null\n      }\n      \n    </section>\n    )\n  }\n\n}\n","import React, { Component } from 'react'\nimport './ProcessedTable.css';\n\nexport default class ProcessedTable extends Component {\n\n  getMsgsFrom(arr, typeParam) {\n    return arr.filter(el => {\n        return el.messages.filter(msg => msg.type === typeParam).length > 0;\n    });\n  }\n\n\n  render() {\n    const { processedFiles, downloadMessagesFile, prevStep, nextStep } = this.props;\n\n    return (\n      <div className=\"result-input\">\n            <h2>Resultado do Processamento</h2>\n\n            <div className='msgs msgs-info'>\n                <h3 className='msgs-header'>Mensagens de Informação</h3>\n                <div className='msgs-body'>            \n                    {   \n                        this.getMsgsFrom(processedFiles, \"INFO\").length === 0 ? <span className='msg-filename'>Sem mensagens deste tipo!</span> :\n                        this.getMsgsFrom(processedFiles, \"INFO\").map( file => {\n                            return (\n                                <div key={ file.fileName }>\n                                    <span className='msg-filename'> { file.fileName }</span>\n                                    <ul>\n                                        { file.messages.map( (el, index) => <li key={index}> {el.text} </li>) }\n                                    </ul>\n                                </div>\n                            )\n                        }) \n                    }\n                </div>\n            </div>\n\n            <div className='msgs msgs-error'>\n                <h3 className='msgs-header'>Mensagens de Erro</h3>\n                <div className='msgs-body'>            \n                    {   \n                        this.getMsgsFrom(processedFiles, \"ERROR\").length === 0 ? <span className='msg-filename'>Sem mensagens deste tipo!</span> :\n                        this.getMsgsFrom(processedFiles, \"ERROR\").map( file => {\n                            return (\n                                <div key={ file.fileName }>\n                                    <span className='msg-filename'> { file.fileName }</span>\n                                    <ul>\n                                        { file.messages.map( (el, index) => <li key={index}> {el.text} </li>) }\n                                    </ul>\n                                </div>\n                            )\n                        }) \n                    }\n                </div>\n            </div>\n\n            <div className='msgs msgs-alert'>\n                <h3 className='msgs-header'>Mensagens de Alerta</h3>\n                <div className='msgs-body'>            \n                    { \n                        this.getMsgsFrom(processedFiles, \"ALERT\").length === 0 ? <span className='msg-filename'>Sem mensagens deste tipo!</span> :\n                        this.getMsgsFrom(processedFiles, \"ALERT\").map( file => {\n                            return (\n                                <div key={ file.fileName }>\n                                    <span className='msg-filename'> { file.fileName }</span>\n                                    <ul>\n                                        { file.messages.map( (el, index) => <li key={index}> {el.text} </li>) }\n                                    </ul>\n                                </div>\n                            )\n                        }) \n                    }\n                </div>\n            </div>\n            \n            <div className='buttons-group'>\n                <button onClick={prevStep}><i className=\"fa fa-angle-double-left fa-1x\" aria-hidden=\"true\"></i>VOLTAR</button>\n                <button onClick={downloadMessagesFile}><i className=\"fa fa-download fa-1x\" aria-hidden=\"true\"></i>DOWNLOAD</button>\n                <button onClick={nextStep}>AVANÇAR<i className=\"fa fa-angle-double-right fa-1x\" aria-hidden=\"true\"></i></button>\n            </div>\n        \n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport ProcessedTable from './ProcessedTable'\nimport './Steps.css';\n\nexport default class Processor extends Component {\n  \n  componentDidMount() {\n    this.props.getTotalInputFiles();    \n  }\n\n  render() {\n    const { uploadedAfastFile, processedFiles, totalInputFiles, handleAfastamentosFilesUpload, processInputFiles, \n      deleteAfastamentosFile, downloadMessagesFile, prevStep, nextStep } = this.props;\n    \n    return (\n    <section>\n      <div className=\"entrada-body\">\n\n        <h2>Processamento dos Arquivos</h2>\n\n        <p>Total de arquivos convertidos identificados: { totalInputFiles }</p>\n        \n        <Dropzone onDrop={acceptedFiles => handleAfastamentosFilesUpload(acceptedFiles[0])}>\n          {({getRootProps, getInputProps}) => (\n            <section>\n              <div {...getRootProps()} className=\"dropzone-div\">\n                <input {...getInputProps()} accept=\".xlsx, xls\"/>\n                <span><strong>Afastamentos</strong></span>\n                <p>Arraste aqui o arquivo de afastamentos em 'xlsx' ou click para selecioná-lo</p>\n                <div className=\"arquivos\">Arquivo de afastamentos: <span>{ uploadedAfastFile !== null ? uploadedAfastFile.name : ' nenhum ' }</span></div>\n              </div>\n            </section>\n          )}\n        </Dropzone>         \n        \n        <div>\n          <button onClick={prevStep}><i className=\"fa fa-angle-double-left fa-1x\" aria-hidden=\"true\"></i>VOLTAR</button>\n          <button onClick={deleteAfastamentosFile}><i className=\"fa fa-trash-o fa-1x\" aria-hidden=\"true\"></i>RETIRAR</button>\n          <button onClick={processInputFiles}><i className=\"fa fa-cogs fa-1x\" aria-hidden=\"true\"></i>PROCESSAR</button>\n        </div>\n     \n      </div>\n\n      {\n        processedFiles.length > 0 ? (<ProcessedTable processedFiles={processedFiles} downloadMessagesFile={downloadMessagesFile} prevStep={prevStep} nextStep={nextStep} />) : null\n      }\n\n    </section>\n    )\n  }\n\n}\n","import React, { Component } from 'react'\nimport './Steps.css';\n\nexport default class Output extends Component {\n  \n  componentDidMount() {\n    this.props.getTotalInputFiles();    \n  }\n\n  render() {\n    const { totalInputFiles, downloadMessagesFile, downloadOutputFile, prevStep, resetFiles } = this.props;\n    \n    return (\n    <section>\n      <div className=\"entrada-body\">\n\n        <h2>Arquivos de saída</h2>\n\n        <p>Total de arquivos convertidos identificados: { totalInputFiles }</p>\n        \n        <div>\n          <button onClick={prevStep}><i className=\"fa fa-angle-double-left fa-1x\" aria-hidden=\"true\"></i>VOLTAR</button>\n          <button onClick={downloadMessagesFile}><i className=\"fa fa-download fa-1x\" aria-hidden=\"true\"></i>MENSAGENS</button>\n          <button onClick={downloadOutputFile}><i className=\"fa fa-download fa-1x\" aria-hidden=\"true\"></i>PLANILHA</button>\n          <button onClick={resetFiles}><i className=\"fa fa-repeat fa-1x\" aria-hidden=\"true\"></i>REINICIAR</button>\n        </div>\n     \n      </div>\n     \n    </section>\n    )\n  }\n\n}\n","const hostname = window.location.hostname;\nconst port = 8090 || window.location.port;\n\nconst URL_BASE = \"http://\" + hostname + \":\" + port + \"/sjc/v3/\";\n\nconst URL_UPLOAD_INPUT_FILE = URL_BASE + \"upload2\";\nconst URL_DELETE_AFAST = URL_BASE + \"upload/afast\";\nconst URL_CONVERT_INPUT_FILES = URL_BASE + \"convert\";\nconst URL_CONVERT_TOTAL_INPUT_FILES = URL_BASE + \"convert/total\";\nconst URL_PROCESS_INPUT_FILES = URL_BASE + \"process\";\nconst URL_DOWNLOAD_MSGS_FILE = URL_BASE + \"messages\";\nconst URL_DOWNLOAD_OUTPUT_FILE = URL_BASE + \"output2\";\n\n\nconst httpGatewayFunctions = {\n\n    uploadFileRequest: (data) => {\n        let formData  = new FormData();\n        formData.append(\"inputfile\", data);\n        return fetch(URL_UPLOAD_INPUT_FILE, {\n                method: 'POST',\n                body: formData\n            });        \n    },\n\n    cleanDirsRequest: () => {\n        return fetch(URL_BASE, {method: 'DELETE'});\n    },\n\n    deleteAfastamentoRequest: () => {\n        return fetch(URL_DELETE_AFAST, {method: 'DELETE'})\n    },\n\n    convertInputFiles: () => {\n        return fetch(URL_CONVERT_INPUT_FILES);\n    },\n\n    totalConvertInputFiles: () => {\n        return fetch(URL_CONVERT_TOTAL_INPUT_FILES);\n    },\n\n    processInputFiles: () => {\n        return fetch(URL_PROCESS_INPUT_FILES);\n    }, \n\n    downloadMessagesFile: () => {\n        return fetch(URL_DOWNLOAD_MSGS_FILE);\n    },\n\n    downloadOutputFile: () => {\n        return fetch(URL_DOWNLOAD_OUTPUT_FILE);\n    }\n\n}\n\nexport default httpGatewayFunctions;","import React, { Component } from 'react';\nimport Header from './component/Header';\nimport Footer from './component/Footer';\nimport FlowMenu from './component/FlowMenu';\nimport Converter from './component/steps/Converter';\nimport Processor from './component/steps/Processor';\nimport Output from './component/steps/Output';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport './App.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport httpGatewayFunctions from './service/HttpGateway';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = { step: 0, totalInputFiles: 0, uploadedFiles: [], convertedFiles: [], uploadedAfastFile: null, processedFiles: [] };\n  }\n\n  getComponentForStep = () => {\n    const { step, uploadedFiles, uploadedAfastFile, convertedFiles, processedFiles, totalInputFiles } = this.state;\n\n    switch(step) {\n      case 0: \n        return (\n          <Converter uploadedFiles={uploadedFiles} convertedFiles={convertedFiles} handleInputFilesUpload={this.handleInputFilesUpload} \n                     resetFiles={this.resetFiles} convertInputFiles={this.convertInputFiles} nextStep={this.nextStep} />\n        );\n      case 1: \n        return (\n          <Processor uploadedAfastFile={uploadedAfastFile} processedFiles={processedFiles} totalInputFiles={totalInputFiles}\n                  handleAfastamentosFilesUpload={this.handleAfastamentosFilesUpload} processInputFiles={this.processInputFiles} \n                  deleteAfastamentosFile={this.deleteAfastamentosFile} downloadMessagesFile={this.downloadMessagesFile} getTotalInputFiles={this.getTotalInputFiles}\n                  prevStep={this.prevStep} nextStep={this.nextStep} />\n        );\n      case 2: \n        return (\n          <Output totalInputFiles={totalInputFiles} downloadMessagesFile={this.downloadMessagesFile} downloadOutputFile={this.downloadOutputFile} \n                  getTotalInputFiles={this.getTotalInputFiles} prevStep={this.prevStep} resetFiles={this.resetFiles} />\n        );\n      default: \n        return (\n          <p>Erro: Passo de processamento não identificado!</p>\n        );\n\n    }\n  }\n\n  nextStep = () => {\n    const currStep = this.state.step;\n    this.setState( { step: currStep+1 } );\n  }\n\n  prevStep = () => {\n    const currStep = this.state.step;\n    this.setState( { step: currStep-1, processedFiles: [] } );    \n  }\n\n  handleInputFilesUpload = (files) => {\n    const validFiles = files.filter(f => f.name.toLowerCase().endsWith('.pdf'));\n    const invalidFiles = files.filter(f => !f.name.toLowerCase().endsWith('.pdf'));\n    const currFiles = [...this.state.uploadedFiles];\n    const existingFiles = validFiles.filter(f => currFiles.map(c => c.name).includes(f.name));\n    const newFiles = validFiles.filter(f => !currFiles.map(c => c.name).includes(f.name));\n\n    if (invalidFiles.length > 0) {\n      const filesNames = invalidFiles.map(f => ' ' + f.name);\n      toast('Os arquivos com extensão inválidas nao foram carregados: ' + filesNames, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }); \n    }\n    if (existingFiles.length > 0) {\n      const filesNames = existingFiles.map(f => ' ' + f.name);\n      toast('Arquivos já carregados anteriormente: ' + filesNames, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }); \n    }\n    if (newFiles.length === 0) return;\n\n    const promises = newFiles.map(f => httpGatewayFunctions.uploadFileRequest(f));\n    Promise.all(promises)\n      .then(res => {\n        const updatedFiles = currFiles.concat(newFiles);\n        toast('Arquivos carregados!', { type: toast.TYPE.SUCCESS, autoClose: true, closeButton: false }); \n        this.setState( {uploadedFiles: updatedFiles, convertedFiles: []} );\n      })\n      .catch(err => {\n        toast('Erro ao fazer upload de arquivo: ' + err, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }); \n      });\n  }\n\n  handleAfastamentosFilesUpload = (file) => {\n    const filename = file.name.toLowerCase();\n    if (!filename.endsWith('.xlsx') && !filename.endsWith('.xls')) {\n      toast('Extensão do arquivo inválida: ' + file.name, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false });\n      return;          \n    }\n    httpGatewayFunctions.deleteAfastamentoRequest()\n      .then(res => {\n        file.isAfastamento = true;\n        httpGatewayFunctions.uploadFileRequest(file);\n        })\n      .then(res => {\n            toast('Arquivo carregado!', { type: toast.TYPE.SUCCESS, autoClose: true, closeButton: false }); \n            this.setState( { uploadedAfastFile: file, processedFiles: []} );\n        })\n      .catch(err => toast('Erro ao fazer upload de arquivo: ' + err, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }));\n  }\n\n  resetFiles = () => {\n    httpGatewayFunctions.cleanDirsRequest()\n      .then(res => {\n        toast('Arquivos de Entrada apagados!!', { type: toast.TYPE.SUCCESS, autoClose: true, closeButton: false }); \n        this.setState( { step: 0, totalInputFiles: 0, uploadedFiles: [], convertedFiles: [], uploadedAfastFile: null, processedFiles: [] } )\n      })\n      .catch(err => toast('Erro ao limpar diretórios: ' + err, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }));    \n  }\n  \n  deleteAfastamentosFile = () => {\n    httpGatewayFunctions.deleteAfastamentoRequest()\n      .then(res => {\n        toast('Arquivos de Afastamento apagado!', { type: toast.TYPE.SUCCESS, autoClose: true, closeButton: false }); \n        this.setState( { processedFiles: [], uploadedAfastFile: null } )\n      })\n      .catch(err => toast('Erro ao limpar diretórios: ' + err, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }));    \n  }\n\n  convertInputFiles = () => {\n    if (this.state.uploadedFiles.length === 0) {\n      toast('Nenhum arquivo feito upload!', { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }); \n      return;\n    }\n    httpGatewayFunctions.convertInputFiles()\n      .then(res => res.json())\n      .then(res => this.setState( { convertedFiles: res } ))\n      .catch(err => toast('Erro ao converter arquivos: ' + err, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }));\n  }\n\n  processInputFiles = () => {\n    httpGatewayFunctions.processInputFiles()\n      .then(res => res.json())\n      .then(res => this.setState( { processedFiles: res } ))\n      .catch(err => toast('Erro ao processar arquivos: ' + err, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }));\n  }\n\n  getTotalInputFiles = () => {\n    httpGatewayFunctions.totalConvertInputFiles()\n      .then(res => res.json())\n      .then(res => this.setState( { totalInputFiles: res } ))\n      .catch(err => toast('Erro ao processar arquivos: ' + err.message, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }));\n  }\n\n  downloadMessagesFile = () => {\n    httpGatewayFunctions.downloadMessagesFile()\n      .then(res => res.blob())\n      .then(blob => {\n          let url = window.URL.createObjectURL(blob);\n          let a = document.createElement('a');\n          a.href = url;\n          a.download = 'mensagens.pdf';\n          a.click();          \n      })\n      .catch(err => toast('Erro ao baixar arquivo: ' + err.message, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }));\n  }\n\n  downloadOutputFile = () => {\n    httpGatewayFunctions.downloadOutputFile()\n      .then(res => res.blob())\n      .then(blob => {\n          let url = window.URL.createObjectURL(blob);\n          let a = document.createElement('a');\n          a.href = url;\n          a.download = 'saida.xls';\n          a.click();          \n      })\n      .catch(err => toast('Erro ao baixar arquivo: ' + err.message, { type: toast.TYPE.ERROR, autoClose: true, closeButton: false }));\n  }\n\n\n  render() {\n    \n    return (\n      \n      <div className=\"App\">\n\n      {/* autenticação ? */}\n\n        <Header />\n\n        <FlowMenu step={this.state.step} />\n\n        <ToastContainer autoClose={5000} />\n               \n        <main>\n          {\n            this.getComponentForStep()\n          }\n        </main>\n\n        <Footer />\n\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}